{"ast":null,"code":"var _jsxFileName = \"/Users/balogunabdulrahman/Desktop/mashrek-test-react-native-app/src/pages/Login.tsx\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport BaseInput from \"../components/BaseInput\";\nimport BaseButton from \"../components/BaseButton\";\nimport Select from \"../components/BaseSelect\";\nimport { validateUsername } from \"../utils/validation\";\nimport \"../i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport BaseLanguageSwitcher from \"../components/BaseLanguageSwitcher\";\nimport { storeUsernameSecurely } from \"../utils/secure\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  const {\n    t\n  } = useTranslation();\n  const navigation = useNavigation();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [country, setCountry] = useState(\"UAE\");\n  const [validationMessage, setValidationMessage] = useState(null);\n  const handleLogin = () => {\n    const validationMessage = validateUsername(username, country);\n    if (!username || !password) {\n      Alert.alert(\"Please enter username and password\");\n      alert(\"Please enter username and password\");\n    } else if (validationMessage) {\n      Alert.alert(\"Validation Error\", validationMessage);\n      alert(validationMessage);\n    } else {\n      storeUsernameSecurely(username);\n      Alert.alert(\"Login Button Pressed\", `Username: ${username}\\nPassword: ${password}`);\n      alert(`Login Button Pressed - Username: ${username}\\nPassword: ${password}`);\n      navigation.navigate(\"Username\");\n    }\n  };\n  const handleUsernameChange = text => {\n    setUsername(text);\n    setValidationMessage(validateUsername(text, country));\n  };\n  return _jsxDEV(View, {\n    style: styles.container,\n    children: [_jsxDEV(BaseLanguageSwitcher, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), _jsxDEV(Text, {\n      style: styles.text,\n      children: t(\"welcome\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), _jsxDEV(Select, {\n      label: t(\"select_country\"),\n      selectedValue: country,\n      onValueChange: setCountry,\n      options: [{\n        label: \"UAE\",\n        value: \"UAE\"\n      }, {\n        label: \"India\",\n        value: \"India\"\n      }, {\n        label: \"USA\",\n        value: \"USA\"\n      }, {\n        label: \"Nigeria\",\n        value: \"Nigeria\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), _jsxDEV(BaseInput, {\n      placeholder: \"username\",\n      value: username,\n      label: t(\"username\"),\n      onChangeText: handleUsernameChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), validationMessage && _jsxDEV(Text, {\n      style: styles.error,\n      children: validationMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), _jsxDEV(BaseInput, {\n      placeholder: \"********\",\n      value: password,\n      label: t(\"password\"),\n      onChangeText: setPassword,\n      secureTextEntry: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), _jsxDEV(BaseButton, {\n      title: t(\"login\"),\n      onPress: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), _jsxDEV(StatusBar, {\n      style: \"auto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\nconst styles = StyleSheet.create({\n  text: {\n    marginBottom: 12,\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    padding: 12,\n    width: \"25%\"\n  },\n  error: {\n    color: \"red\",\n    marginVertical: 5\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","StatusBar","StyleSheet","Text","View","Alert","BaseInput","BaseButton","Select","validateUsername","useTranslation","BaseLanguageSwitcher","storeUsernameSecurely","useNavigation","jsxDEV","_jsxDEV","Login","t","navigation","username","setUsername","password","setPassword","country","setCountry","validationMessage","setValidationMessage","handleLogin","alert","navigate","handleUsernameChange","text","style","styles","container","children","fileName","_jsxFileName","lineNumber","columnNumber","label","selectedValue","onValueChange","options","value","placeholder","onChangeText","error","secureTextEntry","title","onPress","create","marginBottom","fontSize","fontWeight","flex","backgroundColor","padding","width","color","marginVertical"],"sources":["/Users/balogunabdulrahman/Desktop/mashrek-test-react-native-app/src/pages/Login.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, Alert } from \"react-native\";\nimport BaseInput from \"../components/BaseInput\";\nimport BaseButton from \"../components/BaseButton\";\nimport Select from \"../components/BaseSelect\";\nimport { validateUsername } from \"../utils/validation\";\nimport \"../i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport BaseLanguageSwitcher from \"../components/BaseLanguageSwitcher\";\nimport { storeUsernameSecurely } from \"../utils/secure\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { RootStackParamList } from \"../../App\";\nimport { StackNavigationProp } from \"@react-navigation/stack\";\n\ntype LoginScreenNavigationProp = StackNavigationProp<\n  RootStackParamList,\n  \"Login\"\n>;\n\nconst Login: React.FC = () => {\n  const { t } = useTranslation();\n  const navigation = useNavigation<LoginScreenNavigationProp>();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [country, setCountry] = useState(\"UAE\");\n  const [validationMessage, setValidationMessage] = useState<string | null>(\n    null\n  );\n\n  const handleLogin = () => {\n    const validationMessage = validateUsername(username, country);\n    if (!username || !password) {\n      Alert.alert(\"Please enter username and password\");\n      alert(\"Please enter username and password\");\n    } else if (validationMessage) {\n      Alert.alert(\"Validation Error\", validationMessage);\n      alert(validationMessage);\n    } else {\n      storeUsernameSecurely(username);\n      Alert.alert(\n        \"Login Button Pressed\",\n        `Username: ${username}\\nPassword: ${password}`\n      );\n      alert(\n        `Login Button Pressed - Username: ${username}\\nPassword: ${password}`\n      );\n      navigation.navigate(\"Username\");\n    }\n  };\n\n  const handleUsernameChange = (text: string) => {\n    setUsername(text);\n    setValidationMessage(validateUsername(text, country));\n  };\n\n  return (\n    <View style={styles.container}>\n      <BaseLanguageSwitcher />\n\n      <Text style={styles.text}>{t(\"welcome\")}</Text>\n\n      <Select\n        label={t(\"select_country\")}\n        selectedValue={country}\n        onValueChange={setCountry}\n        options={[\n          { label: \"UAE\", value: \"UAE\" },\n          { label: \"India\", value: \"India\" },\n          { label: \"USA\", value: \"USA\" },\n          { label: \"Nigeria\", value: \"Nigeria\" },\n        ]}\n      />\n\n      <BaseInput\n        placeholder=\"username\"\n        value={username}\n        label={t(\"username\")}\n        onChangeText={handleUsernameChange}\n      />\n      {validationMessage && (\n        <Text style={styles.error}>{validationMessage}</Text>\n      )}\n\n      <BaseInput\n        placeholder=\"********\"\n        value={password}\n        label={t(\"password\")}\n        onChangeText={setPassword}\n        secureTextEntry={true}\n      />\n      <BaseButton title={t(\"login\")} onPress={handleLogin} />\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    marginBottom: 12,\n    fontSize: 20,\n    fontWeight: \"bold\",\n  },\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    padding: 12,\n    width: \"25%\",\n  },\n  error: {\n    color: \"red\",\n    marginVertical: 5,\n  },\n});\n\nexport default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAE5C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,OAAO,SAAS;AAChB,SAASC,cAAc,QAAQ,eAAe;AAC9C,OAAOC,oBAAoB,MAAM,oCAAoC;AACrE,SAASC,qBAAqB,QAAQ,iBAAiB;AACvD,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzD,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAC5B,MAAM;IAAEC;EAAE,CAAC,GAAGP,cAAc,CAAC,CAAC;EAC9B,MAAMQ,UAAU,GAAGL,aAAa,CAA4B,CAAC;EAE7D,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG1B,QAAQ,CACxD,IACF,CAAC;EAED,MAAM2B,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMF,iBAAiB,GAAGhB,gBAAgB,CAACU,QAAQ,EAAEI,OAAO,CAAC;IAC7D,IAAI,CAACJ,QAAQ,IAAI,CAACE,QAAQ,EAAE;MAC1BhB,KAAK,CAACuB,KAAK,CAAC,oCAAoC,CAAC;MACjDA,KAAK,CAAC,oCAAoC,CAAC;IAC7C,CAAC,MAAM,IAAIH,iBAAiB,EAAE;MAC5BpB,KAAK,CAACuB,KAAK,CAAC,kBAAkB,EAAEH,iBAAiB,CAAC;MAClDG,KAAK,CAACH,iBAAiB,CAAC;IAC1B,CAAC,MAAM;MACLb,qBAAqB,CAACO,QAAQ,CAAC;MAC/Bd,KAAK,CAACuB,KAAK,CACT,sBAAsB,EACtB,aAAaT,QAAQ,eAAeE,QAAQ,EAC9C,CAAC;MACDO,KAAK,CACH,oCAAoCT,QAAQ,eAAeE,QAAQ,EACrE,CAAC;MACDH,UAAU,CAACW,QAAQ,CAAC,UAAU,CAAC;IACjC;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAIC,IAAY,IAAK;IAC7CX,WAAW,CAACW,IAAI,CAAC;IACjBL,oBAAoB,CAACjB,gBAAgB,CAACsB,IAAI,EAAER,OAAO,CAAC,CAAC;EACvD,CAAC;EAED,OACER,OAAA,CAACX,IAAI;IAAC4B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BpB,OAAA,CAACJ,oBAAoB;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAExBxB,OAAA,CAACZ,IAAI;MAAC6B,KAAK,EAAEC,MAAM,CAACF,IAAK;MAAAI,QAAA,EAAElB,CAAC,CAAC,SAAS;IAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,EAE/CxB,OAAA,CAACP,MAAM;MACLgC,KAAK,EAAEvB,CAAC,CAAC,gBAAgB,CAAE;MAC3BwB,aAAa,EAAElB,OAAQ;MACvBmB,aAAa,EAAElB,UAAW;MAC1BmB,OAAO,EAAE,CACP;QAAEH,KAAK,EAAE,KAAK;QAAEI,KAAK,EAAE;MAAM,CAAC,EAC9B;QAAEJ,KAAK,EAAE,OAAO;QAAEI,KAAK,EAAE;MAAQ,CAAC,EAClC;QAAEJ,KAAK,EAAE,KAAK;QAAEI,KAAK,EAAE;MAAM,CAAC,EAC9B;QAAEJ,KAAK,EAAE,SAAS;QAAEI,KAAK,EAAE;MAAU,CAAC;IACtC;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEFxB,OAAA,CAACT,SAAS;MACRuC,WAAW,EAAC,UAAU;MACtBD,KAAK,EAAEzB,QAAS;MAChBqB,KAAK,EAAEvB,CAAC,CAAC,UAAU,CAAE;MACrB6B,YAAY,EAAEhB;IAAqB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EACDd,iBAAiB,IAChBV,OAAA,CAACZ,IAAI;MAAC6B,KAAK,EAAEC,MAAM,CAACc,KAAM;MAAAZ,QAAA,EAAEV;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CACrD,EAEDxB,OAAA,CAACT,SAAS;MACRuC,WAAW,EAAC,UAAU;MACtBD,KAAK,EAAEvB,QAAS;MAChBmB,KAAK,EAAEvB,CAAC,CAAC,UAAU,CAAE;MACrB6B,YAAY,EAAExB,WAAY;MAC1B0B,eAAe,EAAE;IAAK;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,EACFxB,OAAA,CAACR,UAAU;MAAC0C,KAAK,EAAEhC,CAAC,CAAC,OAAO,CAAE;MAACiC,OAAO,EAAEvB;IAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACvDxB,OAAA,CAACd,SAAS;MAAC+B,KAAK,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEX,CAAC;AAED,MAAMN,MAAM,GAAG/B,UAAU,CAACiD,MAAM,CAAC;EAC/BpB,IAAI,EAAE;IACJqB,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDpB,SAAS,EAAE;IACTqB,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE;EACT,CAAC;EACDX,KAAK,EAAE;IACLY,KAAK,EAAE,KAAK;IACZC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAe5C,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}